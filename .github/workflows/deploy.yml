name: Deploy to ArgoCD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KONECTY_KUBECONFIG }}" > $HOME/.kube/config

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Read ArgoCD deploy template
        id: read-template
        run: |
          YAML_CONTENT=$(cat $GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml)
          
          APP_NAME=$(yq e '.name' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          REPO=$(yq e '.repo' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          PATH=$(yq e '.path' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          DEST_NAMESPACE=$(yq e '.dest_namespace' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          DEST_SERVER=$(yq e '.dest_server' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          PROJECT=$(yq e '.project' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          GRPC_WEB=$(yq e '.grpc_web // false' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" | tr '[:upper:]' '[:lower:]' || echo "false")
          REVISION=$(yq e '.revision' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")
          LABELS=$(yq e '.labels // [] | join(" -l ")' "$GITHUB_WORKSPACE/deploy/argo_deploy_template.yaml" || echo "")

          COMMAND="argocd app create"
          if [ -n "$APP_NAME" ]; then
            COMMAND="$COMMAND --name \"$APP_NAME\""
          fi
          if [ -n "$REPO" ]; then
            COMMAND="$COMMAND --repo \"$REPO\""
          fi
          if [ -n "$PATH" ]; then
            COMMAND="$COMMAND --path \"$PATH\""
          fi
          if [ -n "$DEST_NAMESPACE" ]; then
            COMMAND="$COMMAND --dest-namespace \"$DEST_NAMESPACE\""
          fi
          if [ -n "$DEST_SERVER" ]; then
            COMMAND="$COMMAND --dest-server \"$DEST_SERVER\""
          fi
          if [ -n "$PROJECT" ]; then
            COMMAND="$COMMAND --project \"$PROJECT\""
          fi
          if [ "$GRPC_WEB" = "true" ]; then
            COMMAND="$COMMAND --grpc-web"
          fi
          if [ -n "$REVISION" ]; then
            COMMAND="$COMMAND --revision \"$REVISION\""
          fi
          if [ -n "$LABELS" ]; then
            COMMAND="$COMMAND -l \"$LABELS\""
          fi

          echo "COMMAND=\"$COMMAND\"" >> $GITHUB_ENV

      - name: Create ArgoCD Application
        run: |
          eval "$COMMAND"
        env:
          COMMAND: ${{ env.COMMAND }}
